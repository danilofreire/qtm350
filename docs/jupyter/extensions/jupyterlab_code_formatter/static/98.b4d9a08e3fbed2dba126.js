"use strict";(self.webpackChunkjupyterlab_code_formatter=self.webpackChunkjupyterlab_code_formatter||[]).push([[98],{98:(t,e,r)=>{r.r(e),r.d(e,{default:()=>k});var o,s=r(31),a=r(607),n=r(765),i=r(130),c=r(141),l=r(74),d=r(465);!function(t){t.PLUGIN_NAME="jupyterlab_code_formatter",t.FORMAT_COMMAND=`${t.PLUGIN_NAME}:format`,t.FORMAT_ALL_COMMAND=`${t.PLUGIN_NAME}:format_all`,t.ICON_FORMAT_ALL_SVG='<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" focusable="false" width="1em" height="1em" style="-ms-transform: rotate(360deg); -webkit-transform: rotate(360deg); transform: rotate(360deg);" preserveAspectRatio="xMidYMid meet" viewBox="0 0 1792 1792"><path class="jp-icon3" d="M1473 929q7-118-33-226.5t-113-189t-177-131T929 325q-116-7-225.5 32t-192 110.5t-135 175T317 863q-7 118 33 226.5t113 189t177.5 131T862 1467q155 9 293-59t224-195.5t94-283.5zM1792 0l-349 348q120 117 180.5 272t50.5 321q-11 183-102 339t-241 255.5T999 1660L0 1792l347-347q-120-116-180.5-271.5T116 852q11-184 102-340t241.5-255.5T792 132q167-22 500-66t500-66z" fill="#626262"/></svg>',t.ICON_FORMAT_ALL="fa fa-superpowers",t.SETTINGS_SECTION=`${t.PLUGIN_NAME}:settings`,t.COMMAND_SECTION_NAME="Jupyterlab Code Formatter",t.PLUGIN_VERSION="1.6.1"}(o||(o={}));const u=class{request(t,e,r){const s=d.ServerConnection.makeSettings(),a=l.URLExt.join(s.baseUrl,o.PLUGIN_NAME,t);return d.ServerConnection.makeRequest(a,{body:r,method:e},s).then((t=>200!==t.status?t.text().then((()=>{throw new d.ServerConnection.ResponseError(t,t.statusText)})):t.text()))}getAvailableFormatters(t){return this.request("formatters"+(t?"?cached":""),"GET",null)}};class m{constructor(t){this.working=!1,this.client=t}formatCode(t,e,r,o,s){return this.client.request("format"+(s?"?cached":""),"POST",JSON.stringify({code:t,notebook:o,formatter:e,options:r})).then((t=>JSON.parse(t)))}}class h extends m{constructor(t,e){super(t),this.notebookTracker=e}async formatAction(t,e){return this.formatCells(!0,t,{saving:!1},e)}async formatSelectedCodeCells(t,e,r){return this.formatCells(!0,t,{saving:!1},e,r)}async formatAllCodeCells(t,e,r,o){return this.formatCells(!1,t,e,r,o)}getCodeCells(t=!0,e){if(!this.notebookTracker.currentWidget)return[];const r=[];return(e=e||this.notebookTracker.currentWidget.content).widgets.forEach((o=>{"code"===o.model.type&&(t&&!e.isSelectedOrActive(o)||r.push(o))})),r}getNotebookType(){var t,e,r,o,s;if(!this.notebookTracker.currentWidget)return null;const a=null===(e=null===(t=this.notebookTracker.currentWidget.content.model)||void 0===t?void 0:t.sharedModel)||void 0===e?void 0:e.metadata;if(a){if(a.kernelspec&&a.kernelspec.language&&"string"==typeof a.kernelspec.language)return a.kernelspec.language.toLowerCase();if(a.language_info&&a.language_info.codemirror_mode){const t=a.language_info.codemirror_mode;if("string"==typeof t)return t.toLowerCase();if("string"==typeof t.name)return t.name.toLowerCase()}}const n=this.notebookTracker.currentWidget.sessionContext,i=null===(o=null===(r=null==n?void 0:n.session)||void 0===r?void 0:r.kernel)||void 0===o?void 0:o.name;if(i){const t=null===(s=n.specsManager.specs)||void 0===s?void 0:s.kernelspecs;if(t&&i in t)return t[i].language}return null}getDefaultFormatters(t){const e=this.getNotebookType();if(e){const r=t.preferences.default_formatter[e];if(r instanceof Array)return r;if(void 0!==r)return[r]}return[]}async getFormattersToUse(t,e){const r=this.getDefaultFormatters(t),o=void 0!==e?[e]:r;return 0===o.length&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error","Unable to find default formatters to use, please file an issue on GitHub."),o}async applyFormatters(t,e,r,o){var s,n;for(const i of e){if("noop"===i||"skip"===i)continue;const e=t.map((t=>t.model.sharedModel.source)),c=await this.formatCode(e,i,r[i],!0,r.cacheFormatters);console.log(r.suppressFormatterErrorsIFFAutoFormatOnSave,o.saving);const l=!(null!==(s=r.suppressFormatterErrors)&&void 0!==s&&s||null!==(n=r.suppressFormatterErrorsIFFAutoFormatOnSave)&&void 0!==n&&n&&o.saving);for(let r=0;r<t.length;++r){const o=t[r],s=e[r],n=c.code[r];if(o.model.sharedModel.source===s)if(n.error){if(l&&-1!==(await(0,a.showDialog)({title:"Jupyterlab Code Formatter Error",body:n.error,buttons:[a.Dialog.createButton({label:"Go to cell",actions:["revealError"]}),a.Dialog.okButton({label:"Dismiss"})]})).button.actions.indexOf("revealError")){this.notebookTracker.currentWidget.content.scrollToCell(o);break}}else o.model.sharedModel.source=n.code;else l&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",`Cell value changed since format request was sent, formatting for cell ${r} skipped.`)}}}async formatCells(t,e,r,o,s){if(!this.working){try{this.working=!0;const a=this.getCodeCells(t,s);if(0===a.length)return void(this.working=!1);const n=await this.getFormattersToUse(e,o);await this.applyFormatters(a,n,e,r)}catch(t){await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",`${t}`)}this.working=!1}}applicable(t,e){const r=this.notebookTracker.currentWidget;return r&&e===r}}class p extends m{constructor(t,e){super(t),this.editorTracker=e}formatAction(t,e){return this.formatEditor(t,{saving:!1},e)}async formatEditor(t,e,r){if(!this.working){try{this.working=!0;const o=await this.getFormattersToUse(t,r);await this.applyFormatters(o,t,e)}catch(t){const e=t instanceof Error?t:`${t}`;await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",e)}this.working=!1}}getEditorType(){if(!this.editorTracker.currentWidget)return null;const t=this.editorTracker.currentWidget.content.model.mimeType;return new Map([["text/x-python","python"],["application/x-rsrc","r"],["application/x-scala","scala"],["application/x-rustsrc","rust"],["application/x-c++src","cpp"]]).get(t)}getDefaultFormatters(t){const e=this.getEditorType();if(e){const r=t.preferences.default_formatter[e];if(r instanceof Array)return r;if(void 0!==r)return[r]}return[]}async getFormattersToUse(t,e){const r=this.getDefaultFormatters(t),o=void 0!==e?[e]:r;return 0===o.length&&await(0,a.showErrorMessage)("Jupyterlab Code Formatter Error","Unable to find default formatters to use, please file an issue on GitHub."),o}async applyFormatters(t,e,r){var o,s;for(const n of t){if("noop"===n||"skip"===n)continue;const t=!(null!==(o=e.suppressFormatterErrors)&&void 0!==o&&o||null!==(s=e.suppressFormatterErrorsIFFAutoFormatOnSave)&&void 0!==s&&s&&r.saving),i=this.editorTracker.currentWidget;this.working=!0;const c=i.content.editor.model.sharedModel.source;this.formatCode([c],n,e[n],!1,e.cacheFormatters).then((e=>{if(e.code[0].error)return t&&(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",e.code[0].error),void(this.working=!1);this.editorTracker.currentWidget.content.editor.model.sharedModel.source=e.code[0].code,this.working=!1})).catch((t=>{const e=t instanceof Error?t:`${t}`;(0,a.showErrorMessage)("Jupyterlab Code Formatter Error",e)}))}}applicable(t,e){const r=this.editorTracker.currentWidget;return r&&e===r}}var g=r(12),f=r(355);class C{constructor(t,e,r,o,s,a){this.app=t,this.tracker=e,this.editorTracker=a,this.palette=r,this.settingRegistry=o,this.menu=s,this.client=new u,this.notebookCodeFormatter=new h(this.client,this.tracker),this.fileEditorCodeFormatter=new p(this.client,this.editorTracker),this.setupSettings().then((()=>{this.setupAllCommands(),this.setupContextMenu(),this.setupWidgetExtension()}))}createNew(t,e){const r=new a.ToolbarButton({tooltip:"Format notebook",icon:new f.LabIcon({name:o.FORMAT_ALL_COMMAND,svgstr:o.ICON_FORMAT_ALL_SVG}),onClick:async()=>{await this.notebookCodeFormatter.formatAllCodeCells(this.config,{saving:!1},void 0,t.content)}});return t.toolbar.insertAfter("cellType",this.app.commands.label(o.FORMAT_ALL_COMMAND),r),e.saveState.connect(this.onSave,this),new g.DisposableDelegate((()=>{r.dispose()}))}async onSave(t,e){"started"===e&&this.config.formatOnSave&&(await t.sessionContext.ready,await this.notebookCodeFormatter.formatAllCodeCells(this.config,{saving:!0},void 0,void 0))}createNewEditor(t,e){return e.saveState.connect(this.onSaveEditor,this),new g.DisposableDelegate((()=>{}))}async onSaveEditor(t,e){"started"===e&&this.config.formatOnSave&&this.fileEditorCodeFormatter.formatEditor(this.config,{saving:!0},void 0)}setupWidgetExtension(){this.app.docRegistry.addWidgetExtension("Notebook",this),this.app.docRegistry.addWidgetExtension("editor",{createNew:(t,e)=>this.createNewEditor(t,e)})}setupContextMenu(){this.app.contextMenu.addItem({command:o.FORMAT_COMMAND,selector:".jp-Notebook"})}setupAllCommands(){this.client.getAvailableFormatters(this.config.cacheFormatters).then((t=>{const e=JSON.parse(t).formatters,r=[];Object.keys(e).forEach((t=>{if(e[t].enabled){const s=`${o.PLUGIN_NAME}:${t}`;this.setupCommand(t,e[t].label,s),r.push({command:s})}})),this.menu.editMenu.addGroup(r)})),this.app.commands.addCommand(o.FORMAT_COMMAND,{execute:async()=>{await this.notebookCodeFormatter.formatSelectedCodeCells(this.config)},label:"Format cell"}),this.app.commands.addCommand(o.FORMAT_ALL_COMMAND,{execute:async()=>{await this.notebookCodeFormatter.formatAllCodeCells(this.config,{saving:!1})},iconClass:o.ICON_FORMAT_ALL,iconLabel:"Format notebook"})}async setupSettings(){const t=await this.settingRegistry.load(o.SETTINGS_SECTION),e=t=>{this.config=t.composite};t.changed.connect(e),e(t)}setupCommand(t,e,r){this.app.commands.addCommand(r,{execute:async()=>{for(const e of[this.notebookCodeFormatter,this.fileEditorCodeFormatter])e.applicable(t,this.app.shell.currentWidget)&&await e.formatAction(this.config,t)},isVisible:()=>{for(const e of[this.notebookCodeFormatter,this.fileEditorCodeFormatter])if(e.applicable(t,this.app.shell.currentWidget))return!0;return!1},label:e}),this.palette.addItem({command:r,category:o.COMMAND_SECTION_NAME})}}const k={id:o.PLUGIN_NAME,autoStart:!0,requires:[a.ICommandPalette,s.INotebookTracker,n.ISettingRegistry,i.IMainMenu,c.IEditorTracker],activate:(t,e,r,o,s,a)=>{new C(t,r,e,o,s,a),console.log("JupyterLab extension jupyterlab_code_formatter is activated!")}}}}]);