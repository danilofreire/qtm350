---
title: __QTM 350 - Data Science Computing__
date: "Fall 2025"
lang: en-GB
author: 
  - Danilo Freire
fontfamily: libertine
monofont: inconsolata
monofontoptions: scaled=.95
fontsize: 12pt
spacing: double
geometry: 
  - top=2cm
  - bottom=2cm
  - left=2cm
  - right=2cm
urlcolor: darkblue
linkcolor: Mahogany
citecolor: Mahogany
engine: jupyter
highlight-style: arrow
pdf-engine: pdflatex
format: 
    pdf:
      template: syllabus-template.latex
      toc: true
      toc-depth: 1
      number-sections: false
editor: 
  render-on-save: true
---

# Course Description

Welcome to [QTM 350](https://github.com/danilofreire/qtm350)! This course introduces key tools in modern data science, focusing on three essential aspects: reliability, reproducibility, and robustness. We will cover the [command-line interface](https://en.wikipedia.org/wiki/Command-line_interface), version control with [Git](https://git-scm.com/) and [GitHub](https://github.com/), and literate programming using [Quarto](https://quarto.org/) and [Jupyter Notebooks](https://jupyter.org/). You will also learn about data storage and manipulation with [SQL](https://www.w3schools.com/sql/) and [Pandas](https://pandas.pydata.org/), and parallel computing with [Dask](https://www.dask.org/). We will explore artificial intelligence-assisted programming with [GitHub Copilot](https://github.com/features/copilot) and finish with [Docker](https://www.docker.com/) and containerisation. 

By working with real-world datasets and problems, students will gain hands-on experience using these tools and methods to extract insights from data. This course will develop technical skills and critical thinking needed to solve complex data challenges. Upon completion, students will be prepared to apply these tools to their own research and professional work.

# Learning Objectives

By the end of this course, students will be able to:

- Use the command line interface to manage files and directories.
- Work with version control systems to track changes in code and collaborate with others.
- Create reproducible reports and presentations.
- Use AI tools to assist with programming tasks.
- Apply advanced techniques for data storage, manipulation, and querying.
- Understand the basics of containerisation and parallel computing.
 
# Course Requirements

Some knowledge of programming is recommended, and familiarity with basic data manipulation and visualisation techniques is helpful. However, no prior experience with the tools covered in the course is required.

In terms of software, you will need to install the following tools: [Anaconda distribution of Python 3.x](https://www.anaconda.com/), [VS Code](https://code.visualstudio.com/), [PostgreSQL](https://www.postgresql.org/), [GitHub Desktop](https://github.com/apps/desktop), [Git](https://git-scm.com/), [Docker](https://www.docker.com/), [Quarto](https://quarto.org/), [Dask](https://dask.org/), [GitHub Copilot](https://copilot.github.com/).

Please feel free to reach out if you have any questions about the course content or your readiness to take the class.

# Materials

This course is designed to be self-contained, providing all the necessary resources and materials to succeed in mastering the core concepts. However, students are encouraged to explore the following suggested books and online courses to deepen their understanding of the topics covered in the course.

## Suggested Books

- [Python for Data Analysis](https://wesmckinney.com/book/) by Wes McKinney
- [Elements of Data Science](https://allendowney.github.io/ElementsOfDataScience/README.html) by Allen Downey
- [SQL for Data Scientists](https://sqlfordatascientists.com/) by Renee M. P. Teate
- [Data Science on the Command Line](https://www.datascienceatthecommandline.com/) by Jeroen Janssens
- [Docker for Data Science](https://www.oreilly.com/library/view/docker-for-data/9781484230121/) by Joshua Cook
- [Pro Git](https://git-scm.com/book/en/v2) by Scott Chacon and Ben Straub
- [Free programming books](https://github.com/EbookFoundation/free-programming-books)

### Online Courses

- [Coursera: Python for Everybody Specialisation](https://www.coursera.org/specializations/python)
- [edX: Python Basics for Data Science](https://www.edx.org/learn/python/ibm-python-basics-for-data-science)
- [Codecademy: Learn Python](https://www.codecademy.com/learn/learn-python-3)
- [DataCamp: Introduction to SQL](https://www.datacamp.com/courses/intro-to-sql-for-data-science)
- [Coursera: SQL for Data Science](https://www.coursera.org/learn/sql-for-data-science)
- [Coursera: Introduction to Git and GitHub](https://www.classcentral.com/course/introduction-git-github-18060)
- [Microsoft Learn: GitHub Copilot Fundamentals](https://learn.microsoft.com/en-us/training/paths/copilot/)

### Documentation

- [Official Python Documentation](https://docs.python.org/3/)
- [NumPy Documentation](https://numpy.org/doc/)
- [Pandas Documentation](https://pandas.pydata.org/docs/)
- [Matplotlib Documentation](https://matplotlib.org/stable/contents.html)
- [PostgreSQL Documentation](https://www.postgresql.org/docs/)
- [Git Documentation](https://git-scm.com/doc)
- [GitHub Documentation](https://docs.github.com/en)
- [Dask Documentation](https://docs.dask.org/en/latest/)
- [GitHub Co-Pilot Documentation](https://copilot.github.com/)
- [Docker Documentation](https://docs.docker.com/)

# Course Information

We will meet every Monday and Wednesday from 16:00 to 17:15 in the [Psychology Building 230](http://emap.fmd.emory.edu/website/campus/index.htm#?queryzoom=Yes&Query=(bldg='2045')). It is important that you read the materials before class. All information about the course is available on the course's GitHub repository at <https://github.com/danilofreire/qtm350>. While I will try to adhere to the course schedule as much as possible, I also want to adapt to your learning pace and style. The syllabus and course plan may change in the semester. Again, please check [the course repository](https://github.com/danilofreire/qtm350) regularly to check for updates. I will also announce any changes in class and via email.

# Software

We will mainly use [Python](https://www.python.org) in this course. Python is a free and powerful programming language that is widely used in data science, machine learning, and scientific computing. I recommend using the [Anaconda distribution](https://www.anaconda.com/products/individual) as it comes with many necessary Python libraries for data analysis, such as [Pandas](https://pandas.pydata.org/), [NumPy](https://numpy.org/), and [Jupyter](https://jupyter.org/). 

You can write your Python code in any text editor, but I recommend [VS Code](https://code.visualstudio.com/) with the [Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python). [Pycharm](https://www.jetbrains.com/pycharm/) is also well-regarded by developers. If you are feeling adventurous, you can also use [Neovim](https://neovim.io/) with the [coc-pyright](https://github.com/fannheyward/coc-pyright) plugin. That is, if [you can exit the editor](https://stackoverflow.blog/2017/05/23/stack-overflow-helping-one-million-developers-exit-vim/). :)

We will use [SQLite](https://www.sqlite.org/) for database management. SQLite is a lightweight, serverless, and self-contained database engine that is widely used in data science and web development. You can also easily integrate it with Python using the [sqlite3](https://docs.python.org/3/library/sqlite3.html) library. You are also free to use other databases, such as [PostgreSQL](https://www.postgresql.org/), [MySQL](https://www.mysql.com/), or [MongoDB](https://www.mongodb.com/), if you prefer.

We will also use [Jupyter Notebooks](https://jupyter.org/) and [Quarto](https://quarto.org) in class. Jupyter itself comes pre-installed with Anaconda, but please install the [Jupyter extension for VS Code](https://marketplace.visualstudio.com/items?itemName=ms-toolsai.jupyter&ssr=false) as well. To install Quarto, please follow the instructions on the [official website](https://quarto.org). We will have a hands-on session to learn how to use both of them (but I assume you are already familiar with Jupyter).

Please also install [Docker](https://www.docker.com/) to work with containers. Docker is a platform for developing, shipping, and running applications in containers. Containers allow you to package your application and its dependencies together into a single unit. This makes it easy to ensure that your application will run on any other machine, regardless of any custom settings that machine might have that could differ from the machine that was used for writing and testing the code.

Finally, we will use [GitHub](https://github.com) for version control. Please create a free account on GitHub and install [GitHub Desktop](https://desktop.github.com/) to manage your repositories. We will also use [Git](https://git-scm.com/) in the course. Git is a distributed version control system that allows you to track changes in your codebase and collaborate with others. You can install Git from the [official website](https://git-scm.com/).

To help you get started, I have prepared [a series of tutorials](https://github.com/danilofreire/qtm350/tree/main/tutorials) on how to install Anaconda, Jupyter, SQLite, VS Code, GitHub Copilot, and open a free educational account on GitHub. Please follow these tutorials to ensure that you have all the necessary tools for the course.

# Office Hours

I am very flexible with office hours, and we can schedule an online meeting at any time that works for you. Feel free to send me a message at [danilo.freire@emory.edu](mailto:danilo.freire@emory.edu), and I will likely reply within a few hours. If you prefer, you can meet me in the afternoon at my office. My office address is in the [Psychology and Interdisciplinary Sciences Building, 36 Eagle Row, room 480](https://maps.app.goo.gl/bGHKwasQyp5MnQND6). If possible, please email me before coming to ensure that no two students book the same time slot.

# Academic Integrity

Upon every individual who is a part of Emory University falls the responsibility for maintaining in the life of Emory a standard of unimpeachable honour in all academic work. The [Honour Code of Emory College](http://catalog.college.emory.edu/academic/policies-regulations/honor-code.html) is based on the fundamental assumption that every loyal person of the University not only will conduct his or her own life according to the dictates of the highest honor, but will also refuse to tolerate in others action which would sully the good name of the institution. Academic misconduct is an offense generally defined as any action or inaction which is offensive to the integrity and honesty of the members of the academic community. Any suspected case of academic misconduct will be referred to the Emory Honour Council.

# Artificial Intelligence

Students have to submit ten problem sets and complete five in-class quizzes. You are allowed to use AI to assist with your assignments. I recommend using [GitHub Copilot](https://copilot.github.com/) to generate code snippets, as it is free for students and provides good suggestions and explanations. [Claude](https://claude.ai), [ChatGPT](https://chat.openai.com), and [Perplexity AI](https://perplexity.ai) are also good tools. I am available to provide support and assistance with these tools during office hours or by appointment. However, please note that any errors or omissions resulting from the use of AI tools are your responsibility. Do not rely solely on AI to complete your assignments; you must always double-check your work. Remember to cite all sources used in your problem sets and projects, including AI tools. Please include a note at the end of any document indicating that AI was used in its development.

# Special Needs and Accessibility Services

I am committed to providing necessary accommodations to ensure all students have an equal opportunity to succeed in this course. Students with medical or health conditions that may impact their academic performance should visit the [Department of Accessibility Services (DAS)](http://accessibility.emory.edu/) to determine eligibility for appropriate accommodations. Those who receive accommodations should provide me with an Accommodation Letter from DAS at the beginning of the semester or as soon as the accommodation is granted. Please note that DAS accommodations, such as extra time or quiet spaces, will apply only to quizzes, not assignments. This is because assignments are released in advance, allowing students to work at their own pace. Athletes and students with other commitments should also inform me of any scheduling conflicts at the beginning of the semester. I will do my best to accommodate these students, but I cannot guarantee that all requests will be granted. If you have any questions or concerns, please contact me.

# English Language Learners

Emory University welcomes students from around the country and the world, and the unique perspectives international and multilingual students bring enrich the campus community. To empower multilingual learners, an array of support is available including language and culture workshops and individual appointments. For more information about English Language Learning support at Emory, please contact the ELLP Specialists at <https://writingcenter.emory.edu>. No student will be penalised for their command of the English language.

# Assignments and Grading Policy

**Problem Sets (50%).** There will be ten problem sets throughout the course. These assignments are designed to reinforce concepts covered in lectures and readings, and to provide hands-on practice with statistical programming. Problem sets will include a mix of theoretical questions and practical applications. They will be assigned regularly and must be completed individually. You may discuss your work with other colleagues as long as you do not copy entire sentences, just changing a few words. If you worked with other students, please write down their names on your assignment. Please also acknowledge any sources you used in your work, including textbooks, articles, and AI resources. *Any assignment submitted after the due date/time will be penalised by 10% per day*. Please submit your assignments as Jupyter Notebooks (`.ipynb`) or `.pdf` files via Canvas or email until midnight on the due date.

**Class Quizzes (30%).** Students will also take five in-class quizzes throughout the semester. These quizzes will be based on the lectures from the previous weeks. They will be designed to test your understanding of the material and your ability to apply the concepts to new problems. Quizzes will be open-book and open-notes, and students have the entire class period to complete them. They are individual assessments, and students are not allowed to discuss the questions with their colleagues in class. 

**Final Project (20%)**: For the final project, you will work in groups of three to four to create a short report. This report will require you to apply the tools and methods we have covered in class to a real-world dataset. You should host your report in a GitHub repository, use Quarto for the document, and employ SQL for data manipulation. Make sure to include visualisations and statistical analyses as well. The project is due on the last day of class. You can find the instructions in the course [GitHub repository](https://github.com/danilofreire/qtm151/tree/main/project).

# Grading Scale

Each student's final grade will be based on the following after rounding up to the nearest point:

\small

| Grade | A       | A-      | B+      | B       | B-      | C       | D       | F    |
|-------|---------|---------|---------|---------|---------|---------|---------|------|
| Range | 91%–100%| 86%–90% | 81%–85% | 76%–80% | 71%–75% | 66%–70% | 60%–65% | <60% |

\normalsize

# Course Outline and Suggested Readings

The lecture notes cover all the necessary material for the course, and the weekly suggested readings are recommended for those who want to deepen their understanding of the course topics. As mentioned above, the course outline is subject to change, and I will update the syllabus if needed. Please remember to check the course [GitHub repository](https://github.com/danilofreire/qtm350) regularly. Lecture notes, assignments, and other materials will be posted there as the course progresses.

## Module 01: Introduction 

### August 27, 2025:

- Syllabus and course repository: <https://github.com/danilofreire/qtm350>.
- Lecture 01: [Welcome to QTM 350 - Introduction](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-01/01-introduction.html).
- [Course Tutorials: How to Install Anaconda, Jupyter, PostgreSQL, VSCode, and Open a Free Educational Account on GitHub](https://github.com/danilofreire/qtm350/tutorials).

Suggested references:

- Cleveland, W. S. (2001). [Data science: An action plan for expanding the technical areas of the field of statistics](https://onlinelibrary.wiley.com/doi/abs/10.1111/j.1751-5823.2001.tb00477.x). International Statistical Review, 69(1), 21-26.
- Donoho, D. (2017). [50 Years of Data Science](https://www.tandfonline.com/doi/full/10.1080/10618600.2017.1384734). Journal of Computational and Graphical Statistics, 26(4), 745-766.
- Breiman, L. (2001). [Statistical Modeling: The Two Cultures (with Comments and a Rejoinder by the Author)](https://projecteuclid.org/journals/statistical-science/volume-16/issue-3/Statistical-Modeling--The-Two-Cultures-with-comments-and-a/10.1214/ss/1009213726.full). Statistical Science, 16(3), 199-231.
- Brady, H. E. (2019). [The Challenge of Big Data and Data Science](https://www.annualreviews.org/content/journals/10.1146/annurev-polisci-090216-023229). Annual Review of Political Science, 22(1), 297-323.
- Zitnik, M., Nguyen, F., Wang, B., Leskovec, J., Goldenberg, A., & Hoffman, M. M. (2019). [Machine Learning for Integrating Data in Biology and Medicine: Principles, Practice, and Opportunities](https://www.sciencedirect.com/science/article/abs/pii/S1566253518304482). Information Fusion, 50, 71-91.

### September 3, 2025:

- Lecture 02: [Computational Literacy](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-02/02-computational-literacy.html).
- **Assignment 01:** [Problem Set 01](https://github.com/danilofreire/qtm350/blob/main/assignments/01-assignment.ipynb).

Suggested references:

- Campbell-Kelly, M., Aspray, W. F., Yost, J. R., Tinn, H., & Díaz, G. C. (2023). [Computer: A History of the Information Machine](https://doi.org/10.4324/9781003263272). Routledge.
- Shalf, J. (2020). [The Future of Computing beyond Moore’s Law](https://royalsocietypublishing.org/doi/full/10.1098/rsta.2019.0061). Philosophical Transactions of the Royal Society A, 378(2166), 20190061.
- Al-Hashimi, H. M. (2023). [Turing, von Neumann, and The Computational Architecture of Biological Machines](https://www.pnas.org/doi/abs/10.1073/pnas.2220022120). Proceedings of the National Academy of Sciences, 120(25), e2220022120.
- Wing, J. M. (2006). [Computational Thinking](https://www.cs.cmu.edu/~15110-s13/Wing06-ct.pdf). Communications of the ACM, 49(3), 33-35.
- Videos: [David J. Malan - Abstraction](https://www.youtube.com/watch?v=6V1sr0XV_Ng), [Khan Academy - Hexadecimal Number System](https://www.youtube.com/watch?v=4EJay-6Bioo), [Matthias Wandel - Marble Adding Machine](https://youtu.be/GcDshWmhF4A), [Crash Course - Early Computing](https://www.youtube.com/watch?v=O5nskjZ_GoI) and [Electronic Computing](https://www.youtube.com/watch?v=LN0ucKNX0hc) (the last two are quite entertaining!).

## Module 02: Introduction to the Command-Line Interface and Version Control

### September 8, 2025:

- Lecture 03: [The Command-Line Interface (CLI), Shell Basics, and File Management](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-03/03-command-line.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=9a77f4a0-f1ea-498a-b85f-1a8993922f82&hostId=05eb977d-4f8a-440e-9e45-95212b29d103)

Suggested references:

- Janssens, J. (2021). [Data Science at the Command Line: Obtain, Scrub, Explore, and Model Data with Unix Power Tools (2nd ed.)](https://jeroenjanssens.com/dsatcl/). O'Reilly Media.
- Levy, J. (2024). [The Art of Command Line](https://github.com/jlevy/the-art-of-command-line). GitHub.
- Shotts, W. (2019). [The Linux Command Line: A Complete Introduction](https://linuxcommand.org/tlcl.php). No Starch Press.
- Healy, K. (2019). [The Plain Person's Guide to Plain Text Social Science](https://plain-text.co/). Chapters 1-5.

### September 10, 2025:

- Lecture 04: [More Command Line Tools, Text Files and Scripting](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-04/04-more-command-line.html).
- **Assignment 01 due (5%).**
- **Assignment 02:** [Problem Set 02](https://github.com/danilofreire/qtm350/blob/main/assignments/02-assignment.ipynb).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=9a77f4a0-f1ea-498a-b85f-1a8993922f82&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

Suggested references:

- Kerr, D. (2024). [Effective Shell](https://effective-shell.com/).
- Irianto, I. (2021). [Learn Vim (the Smart Way)](https://github.com/iggredible/Learn-Vim).
- Neil, D. (2015). [Practical Vim: Edit Text at the Speed of Thought](https://pragprog.com/titles/dnvim2/practical-vim-second-edition/). Pragmatic Bookshelf.
- Dennis, J. [Your problem with Vim is that you don't grok vi.](https://stackoverflow.com/questions/1218390/what-is-your-most-productive-shortcut-with-vim/1220118#1220118) (Stack Overflow).
- [Vim Adventures](https://vim-adventures.com/). (Instructor's note: this is a fun, albeit cringy, way to learn Vim).
- Videos: [freeCodeCamp - Command line crash course](https://www.youtube.com/watch?v=yz7nYlnXLfE&pp=ygUXaG93IHRvIHVzZSBjb21tYW5kIGxpbmU%3D), [Percy Grunwald - Absolute beginner guide to the macOS terminal](https://www.youtube.com/watch?v=aKRYQsKR46I&pp=ygUcdGVybWluYWwgZm9yIGJlZ2lubmVycyBtYWNvcw%3D%3D), [NetworkChuck - 50 macOS tips and tricks using terminal](https://www.youtube.com/watch?v=qOrlYzqXPa8&pp=ygUcdGVybWluYWwgZm9yIGJlZ2lubmVycyBtYWNvcw%3D%3D)

### September 15, 2025:

- Lecture 05: [Version control with Git and GitHub](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-05/05-git-github.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=f3930dce-298d-4610-a365-406fa3088a87&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

Suggested references:

- Chacon, S. and Straub, B. (2014). [Pro Git](https://git-scm.com/book/en/v2). Apress. (Instructor's note: this is _the book_ on Git).
- GitHub tutorials: [GitHub skills](https://skills.github.com/) (recommended), [Git guides](https://github.com/git-guides), [GitHub learning lab](https://lab.github.com/), [Best practices for repositories](https://docs.github.com/en/repositories/creating-and-managing-repositories/best-practices-for-repositories).

### September 17, 2025:

- Lecture 06: [More Git and GitHub: pull requests, issues, pages, and collaboration features](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-06/06-more-git-github.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=eec92538-78d8-4974-ba7b-8f83b5f3b215&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).
- **Assignment 02 due (5%).**
- **Assignment 03:** [Problem Set 03](https://github.com/danilofreire/qtm350/blob/main/assignments/03-assignment.ipynb).

Suggested references:

- Perez-Riverol, Y., Gatto, L., Wang, R., Sachsenberg, T., Uszkoreit, J., Leprevost, F. da V., Fufezan, C., Ternent, T., Eglen, S. J., Katz, D. S., Pollard, T. J., Konovalov, A., Flight, R. M., Blin, K., & Vizcaíno, J. A. (2016). [Ten Simple Rules for Taking Advantage of Git and GitHub](https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1004947). PLOS Computational Biology, 12(7), e1004947.
- Beckman, M. D., Çetinkaya-Rundel, M., Horton, N. J., Rundel, C. W., Sullivan, A. J., & Tackett, M. (2021). [Implementing version control with git and GitHub as a learning objective in statistics and data science courses](https://www.tandfonline.com/doi/pdf/10.1080/10691898.2020.1848485). Journal of Statistics and Data Science Education, 29(sup1), S132-S144.
- Escamilla, E., Klein, M., Cooper, T., Rampin, V., Weigle, M. C., & Nelson, M. L. (2022). [The Rise of GitHub in Scholarly Publications](https://arxiv.org/abs/2208.04895). arXiv preprint arXiv:2208.04895.

### September 22, 2025:

- Lecture 07: [Git and GitHub Continued](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-05/05-git-github.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=0c41d485-25b6-44a6-a825-70854f1953cb&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

## Module 03: Literate Programming with Markdown, Quarto, and Jupyter

### September 24, 2025:

- Lecture 08: [Quiz 01: Git and Github (6%)](https://github.com/danilofreire/qtm350-quiz01/).
- **Assignment 03 due (5%).**
- **Assignment 04:** [Problem Set 04](https://github.com/danilofreire/qtm350/blob/main/assignments/04-assignment.ipynb).

Suggested references:

- [Quarto official website](https://quarto.org/).
- Awesome Quarto: <https://github.com/mcanouil/awesome-quarto>. Note: this repository contains dozens of tutorials, examples, and resources. 
- Çetinkaya-Rundel, M. & Lowndes, J. S. (2022) [Keynote talk: Hello Quarto: Share • Collaborate • Teach • Reimagine](https://www.youtube.com/watch?v=p7Hxu4coDl8). [Slides](https://mine.quarto.pub/hello-quarto/#/hello-quarto-title) and [source code](https://github.com/mine-cetinkaya-rundel/hello-quarto). This is one of the nicest Quarto presentations I have seen.
- [Getting Started with Quarto (YouTube)](https://www.youtube.com/watch?v=_f3latmOhew&t=2s). Note: Posit (formerly RStudio) has a series of tutorials on Quarto on their YouTube channel. You can find their playlist [here](https://www.youtube.com/playlist?list=PL9HYL-VRX0oQI8fVioFxMTBrViFnRX_Df).
- [Markdown Guide](https://www.markdownguide.org/basic-syntax/).
- [Jupyter Notebooks Documentation](https://jupyter.org/).
- [Codecademy - How to use Jupyter Notebooks](https://www.codecademy.com/article/how-to-use-jupyter-notebooks)
- [Course tutorial: Jupyter and Markdown](https://danilofreire.github.io/qtm350/tutorials/02-jupyter-markdown-tutorial.html)

### September 29, 2025:

- Lecture 09: [Introduction to Quarto](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-08/08-quarto.html).

Suggested references:

- [Quarto official website](https://quarto.org/).
- Awesome Quarto: <https://github.com/mcanouil/awesome-quarto>. Note: this repository contains dozens of tutorials, examples, and resources. 
- Çetinkaya-Rundel, M. & Lowndes, J. S. (2022) [Keynote talk: Hello Quarto: Share • Collaborate • Teach • Reimagine](https://www.youtube.com/watch?v=p7Hxu4coDl8). [Slides](https://mine.quarto.pub/hello-quarto/#/hello-quarto-title) and [source code](https://github.com/mine-cetinkaya-rundel/hello-quarto). This is one of the nicest Quarto presentations I have seen.
- [Getting Started with Quarto (YouTube)](https://www.youtube.com/watch?v=_f3latmOhew&t=2s). Note: Posit (formerly RStudio) has a series of tutorials on Quarto on their YouTube channel. You can find their playlist [here](https://www.youtube.com/playlist?list=PL9HYL-VRX0oQI8fVioFxMTBrViFnRX_Df).

### October 1, 2025:

- Lecture 10: [Writing Documents, Presentations, and Websites with Quarto](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-09/09-more-quarto.html).
- **Assignment 04 due (5%).**
- **Assignment 05:** [Problem Set 05](https://github.com/danilofreire/qtm350/blob/main/assignments/04-assignment.ipynb).
- [Kahoot quiz](https://play.kahoot.it/v2/?quizId=b3cb9962-bfcd-4b44-a3f4-4357b1442eda&hostId=05eb977d-4f8a-440e-9e45-95212b29d103)

Suggested references:

- [Quarto Documentation - Presentations](https://quarto.org/docs/presentations/) and [Websites](https://quarto.org/docs/websites/).
- [GitHub Pages Documentation](https://docs.github.com/en/pages).
- French, J. (2023). [Creating Websites with Quarto and GitHub Pages (YouTube Playlist)](https://www.youtube.com/playlist?list=PLkrJrLs7xfbXcEKhTCKRSr2VXH4yiBeXo).
- Taylor, I. (2022). [Publishing a Quarto Site to GitHub Pages](https://www.ianmtaylor.net/posts/2022/deploy-quarto-to-github-pages/).

## Module 04: AI-Assisted Programming

### October 6, 2025:

- Lecture 11: [Introduction to AI-Assisted Programming and Chatbots](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-11/11-ai-programming.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=ecf9f3d1-7d0d-4ca1-a3a5-a26c5e72427b&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

Suggested references:

- Matarazzo, A & Torlone, R. (2025). [A Survey on Large Language Models with some Insights on their Capabilities and Limitations](https://arxiv.org/abs/2501.04040). arXiv preprint arXiv:2501.04040."
- Cihon, P. & Demirer, M. (2023). [How AI-powered software development may affect labor markets](https://www.brookings.edu/articles/how-ai-powered-software-development-may-affect-labor-markets/). Brookings Institution
- Poldrack, R. A., Lu, T., & Beguš, G. (2023). [AI-assisted Coding: Experiments with GPT-4](https://arxiv.org/abs/2304.13187). arXiv preprint arXiv:2304.13187.
- Lau, S & Guo, P. (2023). [From "Ban It Till We Understand It" to "Resistance is Futile": How University Programming Instructors Plan to Adapt as More Students Use AI Code Generation and Explanation Tools such as ChatGPT and GitHub Copilot](https://dl.acm.org/doi/fullHtml/10.1145/3568813.3600138). In Proceedings of the 2023 ACM Conference on International Computing Education Research V.1 (ICER '23 V1), August 07--11, 2023, Chicago, IL, USA. ACM, New York, NY, USA 16 Pages.
- [Linus Torvalds Discusses the Impact of AI on Programming (YouTube)](https://www.youtube.com/watch?v=VHHT6W-N0ak).
- [Using GitHub Copilot in the Command Line](https://docs.github.com/en/copilot/using-github-copilot/using-github-copilot-in-the-command-line)
- [GitHub Copilot YouTube Playlist](https://www.youtube.com/playlist?list=PL0lo9MOBetEHEHi9h0k_lPn0XZdEeYZDS)

### October 8, 2025:

- Lecture 12: **Quiz 02: Literate Programming (6%)**.
- **Assignment 04 due (5%).**
- **Assignment 05:** [Problem Set 05](https://github.com/danilofreire/qtm350/blob/main/assignments/05-assignment.ipynb).

### October 13, 2025:

- Lecture 13: [AI-Assisted Programming, APIs, and Agents.](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-13/13-ai.html).

## Module 05: Introduction to Cloud Computing

### October 15, 2025:

- Lecture 14: [Introduction to Cloud Computing](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-14/14-cloud.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=8691380c-2ccb-49fa-aab1-471754aeb24c&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).
- **Assignment 05 due (5%).**

Suggested references:

- [Amazon Web Services (AWS) Documentation](https://docs.aws.amazon.com/).
- [AWS Educate](https://aws.amazon.com/education/awseducate/).
- [AWS Training and Certification](https://aws.amazon.com/training/).
- [AWS Cloud Practitioner Tutorial](https://www.w3schools.com/aws/)
- [Ollama Documentation](https://github.com/ollama/ollama/tree/main/docs).
- [LM Studio Documentation](https://lmstudio.ai/docs/app).
- [Browser Use Documentation](https://docs.browser-use.com/introduction)
- [Hugging Face Documentation](https://huggingface.co/docs). Note: great resource for NLP models and tools.
- Newman, S. (2021). [Building microservices: designing fine-grained systems](https://books.google.com.br/books?id=ZvM5EAAAQBAJ&lpg=PT16&ots=ui8f8ybCQq&dq=Building%20Microservices%20by%20Sam%20Newman&lr&pg=PA1#v=onepage&q&f=false). O'Reilly Media, Inc.
- Erl, T., Puttini, R., & Mahmood, Z. (2013). [Cloud computing: concepts, technology & architecture](https://books.google.com.br/books?id=zqhpAgAAQBAJ&lpg=PR13&ots=N7cmAFxaQV&dq=%22Cloud%20Computing%3A%20Concepts%2C%20Technology%20%26%20Architecture%22%20by%20Thomas%20Erl%20&lr&pg=PR13#v=onepage&q=%22Cloud%20Computing:%20Concepts,%20Technology%20&%20Architecture%22%20by%20Thomas%20Erl&f=false). Pearson Education.

### October 20, 2025:

- Lecture 15: [More Cloud Computing with Amazon Web Services (AWS)](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-15/15-cloud2.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=9a098f1f-ebd6-40cd-aa4e-b8f096683a37&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).
 
### October 22, 2025:

- Lecture 16: **Quiz 03: AI-Assisted Programming and Cloud Computing (6%)**.
- **Assignment 07:** Problem Set 07.

## Module 06: Introduction to SQL Databases 

### October 27, 2025:

- Lecture 17: [Introduction to SQL: Data Types, Tables, and Queries](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-17/17-introduction-sql.html).
- **Instructions for the Final Project**.

Suggested references:

- [Mode Analytics: SQL Tutorial](https://mode.com/sql-tutorial/).
- [Real Python: SQL Databases and SQLite](https://realpython.com/python-sql-libraries/).
- [Khan Academy: SQL Basics](https://www.khanacademy.org/computing/computer-programming/sql). (Note: Khan Academy is a great resource for learning SQL and other programming languages).
- [SQLite Cheat Sheet](https://www.sqlitetutorial.net/sqlite-cheat-sheet/).
- [SQLite Documentation](https://www.sqlite.org/docs.html).
- [SQL for Data Science](https://www.coursera.org/learn/sql-for-data-science?irgwc=1).

### October 29, 2025:

- Lecture 18: [SQL in Python: Connecting to Databases with Pandas](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-18/18-sql-python.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=ebd517ed-7bf1-447c-8e30-9c5abb75ef16&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).
- **Assignment 07 due (5%).**
- **Assignment 08:** Problem Set 08.

### November 3, 2025:

- Lecture 19: [Merging Tables in SQL](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-19/19-sql-tables.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=0d1466b5-ef43-4ab3-90aa-c46ae0554f19&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

Suggested references:

- [Pandas Documentation: SQL Databases](https://pandas.pydata.org/docs/user_guide/io.html#sql-queries).
- [Real Python: Working with SQLite Databases Using Python and Pandas](https://realpython.com/python-sql-libraries/).
- [Mode Analytics: SQL Joins](https://mode.com/sql-tutorial/sql-joins/).
- [SQL Joins Tutorial](https://www.sqlitetutorial.net/sqlite-join/).

### November 5, 2025:

- Lecture 20: **Quiz 04: SQL Databases (6%)**.
- **Assignment 08 due (5%).**
- **Assignment 09:** Problem Set 09.

## Module 07: Parallel Computing

### November 10, 2025:

- Lecture 21: [Parallel Computing with Dask](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-21/21-parallel-computing.html).

Suggested references:

- [Dask Documentation](https://docs.dask.org/en/latest/)
- [Dask Tutorial](https://tutorial.dask.org/)
- [Coiled - Intro to Dask Tutorial (YouTube)](https://www.youtube.com/watch?v=z18qjLu-Mw4&list=PLeDTMczuyDQ8S73cdc0PrnTO80kfzpgz2&pp=iAQB).
- Rocklin, M. (2017). [Dask: Flexible Library for Parallel Computing in Python](https://proceedings.scipy.org/articles/Majora-7b98e3ed-013). In Proceedings of the 16th Python in Science Conference (Vol. 126, p. 130).

### November 12, 2025:

- Lecture 22: [Application: Parallelising Data Analysis with Dask and AutoML](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-22/22-parallel-automl.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=a2403e39-2c84-473b-8e78-ea0889581b0c&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).
- **Assignment 09 due (5%).**
- **Assignment 10:** Problem Set 10

Suggested references:

- [Dask Documentation: Machine Learning](https://ml.dask.org/).
- He, X., Zhao, K., & Chu, X. (2021). [AutoML: A Survey of the State-of-The-Art](https://www.sciencedirect.com/science/article/abs/pii/S0950705120307516). Knowledge-based systems, 212, 106622.
- [TPOT Documentation](https://epistasislab.github.io/tpot/).

## Module 08: Containers and Reproducibility

### November 17, 2025:

- Lecture 23: [Dependency Management, Virtual Environments, and Containers](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-23/23-containers.html).

Suggested references:

- [Docker Documentation](https://docs.docker.com/)
- [ComposeCraft](https://github.com/composecraft/composecraft). A tool to help you manage, edit and share docker compose files in a GUI way.

### November 19, 2025:

- Lecture 24: [Docker for Data Science](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-24/24-docker.html).
- **Assignment 10 due (5%).**

### November 24, 2025:

- Lecture 25: [Course Review](https://raw.githack.com/danilofreire/qtm350/main/lectures/lecture-25/25-revision.html).
- [Kahoot Quiz](https://play.kahoot.it/v2/?quizId=d19e2d39-f38c-4a1e-9d5d-c3113bd3ad36&hostId=05eb977d-4f8a-440e-9e45-95212b29d103).

### December 1, 2025:

- Lecture 26: **Quiz 05: Dask, Docker and Containers (6%)**.

### December 3, 2025:

- Lecture 27: No specific agenda; students can drop in for help with their projects.

### December 8, 2025:

- No lecture.
- **Final Project due (20%).**